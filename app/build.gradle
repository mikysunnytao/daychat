apply plugin: 'com.android.application'
//apply plugin: 'com.mob.sdk'
apply plugin: 'kotlin-android'

//MobSDK {
//    appKey ""
//    appSecret ""
//    ShareSDK {
//        loopShare false
//        devInfo {
//            Wechat {
//                appId ""
//                appSecret ""
//                userName ""
//                path "pages/index/index.html?id=1"
//                withShareTicket true
//                miniprogramType 2
//            }
//            QQ {
//                appId ""
//                appKey ""
//            }
//            SinaWeibo {
//                appKey ""
//                appSecret ""
//                callbackUri "http://www.sharesdk.cn"
//            }
//            WechatMoments {
//                appId ""
//                appSecret ""
//            }
//            WechatFavorite {
//                appId ""
//                appSecret ""
//            }
//            QZone {
//                appId ""
//                appKey ""
//            }
//        }
//    }
//}


android {
   signingConfigs {
        relesae {
            storeFile file('../meiying.jks')
            storePassword 'meiying'
            keyAlias = 'key0'
            keyPassword 'meiying'
        }

        debug  {
            storeFile file('../meiying.jks')
            storePassword 'meiying'
            keyAlias = 'key0'
            keyPassword 'meiying'
        }
    }
    compileSdkVersion 33
    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }
    defaultConfig {
        applicationId "com.daychat.live"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0.0"

        ndk {
            abiFilters "armeabi-v7a"
        }

    }

    dataBinding{
        enabled true
    }

    buildTypes {
        debug{
            buildConfigField "String", "licenceURL", '"https://license.vod2.myqcloud.com/license/v2/1313375752_1/v_cube.license"'
            buildConfigField "String", "licenceKey", '"88bd2af3b39f129b9de18055e7e86148"'
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "licenceURL", '"https://license.vod2.myqcloud.com/license/v2/1313375752_1/v_cube.license"'
            buildConfigField "String", "licenceKey", '"88bd2af3b39f129b9de18055e7e86148"'
            signingConfig signingConfigs.relesae
        }
    }


    // 拷贝这段代码起始位置
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs += "src/main/res-light"
            res.srcDirs += "src/main/res-lively"
            res.srcDirs += "src/main/res-serious"
            res.srcDirs += "src/main/self-res"
        }
    }

}
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        //println("=============== ${variant.getBuildType().name.toUpperCase()} ===============")
        //println("=============== ${variant.getFlavorName()} ===============")
        def vn
        if (variant.getFlavorName() != null && variant.getFlavorName() != "") {
            vn = variant.name;
        } else {
            if (variant.getBuildType().name == "release") {
                vn = "Release"
            } else {
                vn = "Debug"
            }
        }
        def taskName = "process${vn}MainManifest";
        try {
            println("=============== taskName ${taskName} ===============")
            project.getTasks().getByName(taskName)
        } catch (Exception e) {
            return
        }
        ///你的自定义名字
        project.getTasks().getByName(taskName).doFirst {
            //def method = it.getClass().getMethods()
            it.getManifests().getFiles().each {
                if (it.exists() && it.canRead()) {
                    def manifestFile = it
                    def exportedTag = "android:exported"
                    def nameTag = "android:name"
                    ///这里第二个参数是 false ，所以 namespace 是展开的，所以下面不能用 androidSpace，而是用 nameTag
                    def xml = new XmlParser(false, false).parse(manifestFile)
                    if (xml.application != null && xml.application.size() > 0) {
                        def nodes = xml.application[0].'*'.findAll {
                            //挑选要修改的节点，没有指定的 exported 的才需要增加
                            //如果 exportedTag 拿不到可以尝试 it.attribute(androidSpace.exported)
                            (it.name() == 'activity' || it.name() == 'receiver' || it.name() == 'service') && it.attribute(exportedTag) == null

                        }
                        if (nodes.application != null && nodes.application.size() > 0) {
                            nodes.each {
                                def t = it
                                it.each {
                                    if (it.name() == "intent-filter") {
                                        println("$manifestFile \n .....................${t.attributes().get(nameTag)}......................")
                                    }
                                }
                            }
                        }
                    }


                }
            }
        }
    }
}

dependencies {
    implementation project(path: ':tuicore')
    implementation project(path: ':tuichat')
    implementation project(path: ':tuiconversation')
    implementation project(path: ':xmagickit')
    implementation project(':tuicontact')
    implementation project(path: ':slider')
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'])
    implementation 'com.qiniu:qiniu-android-sdk:8.4.3'
    implementation 'com.tencent.bugly:crashreport:latest.release'

    // 导入腾讯云短视频SDK jar
    implementation fileTree(dir: 'src/main/jniLibs', includes: ['*.jar'])
    //   implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
//    implementation 'com.github.centerzx:ShapeBlurView:1.0.5'
//    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(path: ':picture_library')
    implementation 'com.github.svga:SVGAPlayer-Android:2.6.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation files('libs/pldroid-player-2.3.3.jar')
    implementation files('libs/pldroid-shortvideo-3.4.0.jar')
    implementation files('libs/pldroid-player-2.3.3.jar')

    def dialogx_version = "0.0.48"
    implementation "com.kongzue.dialogx:DialogX:${dialogx_version}"
//    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "com.google.android.exoplayer:exoplayer:2.18.0"
    //  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    //  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
//    implementation 'com.orhanobut:dialogplus:1.11@aar'
    implementation 'q.rorbin:badgeview:1.1.0'
    //AutoDispose解决RxJava内存泄漏
    /*  implementation 'com.uber.autodispose:autodispose:0.7.0'
      implementation 'com.uber.autodispose:autodispose-android:0.7.0'
      implementation 'com.uber.autodispose:autodispose-android-archcomponents:0.7.0'*/
//Material-dialogs
//    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
//butterknife
    //   implementation 'com.jakewharton:butterknife:9.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'


    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.10.6'
//okhttp3
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"
    implementation 'com.squareup.okio:okio:3.0.0'
//retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
//rxjava2
    // implementation "io.reactivex.rxjava2:rxjava:2.1.12"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
//greendao
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.2'
//沉浸式状态栏
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    //权限管理
//    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    implementation 'com.github.xiaohaibin:XBanner:1.7.3'
    // -------------------- 以下4个库是必须依赖的 ----------------------------
//    implementation 'cn.bingoogolapple:bga-photopicker:1.2.9@aar'
//    implementation 'cn.bingoogolapple:bga-baseadapter:1.2.9@aar'
    // -------------------- 以上4个库是必须依赖的 ----------------------------

    implementation 'io.github.youth5201314:banner:2.2.2'
    //上下拉
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'
//    implementation 'de.hdodenhof:circleimageview:3.1.0'
//    implementation 'com.danikula:videocache:2.7.1'
//    implementation "com.facebook.fresco:fresco:1.10.0"

    implementation 'androidx.cardview:cardview:1.0.0'

//    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'
//
//
//    implementation 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'

//    implementation 'com.lxj:xpopup:1.8.10'
//    implementation 'pub.devrel:easypermissions:1.0.1'
//    implementation 'androidx.recyclerview:recyclerview:1.0.0'



    implementation 'com.alibaba:fastjson:1.1.71.android'

    // implementation(name: 'imsdk-4.8.50', ext: 'aar')

    // 拷贝这段代码起始位置
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    implementation 'com.contrarywind:Android-PickerView:4.1.9'
//    implementation 'com.yanzhenjie:permission:2.0.0-rc4'
    implementation 'com.google.android.material:material:1.0.0'

//    implementation project(':beauty')
//    implementation project(':ugckit')
    implementation project(path: ':picture_library')
    implementation project(path: ':ucrop')
    implementation project(path: ':video-record')
    implementation project(':video-compressor')
    implementation project(':video-effect')
//    implementation project(path: ':lib_tcsuperplayer')
    //  implementation project(path: ':SVGAPlayer')

    implementation 'com.google.android.gms:play-services-auth:20.6.0'
//    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    // 必选，内部默认使用系统mediaplayer进行解码
//    implementation 'com.github.dueeeke.dkplayer:dkplayer-java:3.0.3'
    implementation 'com.facebook.android:facebook-login:latest.release'

    // 可选，包含StandardVideoController的实现
//    implementation 'com.github.dueeeke.dkplayer:dkplayer-ui:3.0.3'

    implementation files('libs/open_sdk_r8353806_lite.jar')
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    // 可选，使用exoplayer进行解码
//      implementation 'com.github.dueeeke.dkplayer:player-exo:3.0.3'
    //app-updater
    implementation 'com.king.app:app-updater:1.0.8'
    //app-dialog
//    implementation 'com.king.app:app-dialog:1.0.8'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.21'
//
    implementation 'com.wang.avi:library:2.1.3'
//    implementation project(path: ':tuikit2')
    implementation project(path: ':tiui')
    implementation 'com.github.lzyzsd:jsbridge:1.0.4'
//    implementation 'com.github.hackware1993:MagicIndicator:1.5.0'

    implementation project(path: ':nasinet')
    implementation project(path: ':flowlayout')
    implementation 'com.example.zhouwei.library:library:1.0.0'
//    implementation 'com.nex3z:flow-layout:1.3.3'
    api 'com.uber.autodispose:autodispose:0.7.0'
    api 'com.uber.autodispose:autodispose-android:0.7.0'
    api 'com.uber.autodispose:autodispose-android-archcomponents:0.7.0'
//    implementation 'com.github.imangazalievm:circlemenu:3.0.0'
    implementation 'com.king.app:app-updater:1.0.8'
    api project(':tuigroup')
    implementation 'com.zyp.cardview:cardview:1.0.1'
    implementation files('libs/tbs_sdk_thirdapp_v4.3.0.39_43939_sharewithdownloadwithfile_withoutGame_obfs_20200713_223411.jar')
//    implementation(project(":flowlayout"))
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    implementation 'com.kyleduo.switchbutton:library:2.0.3'
    //图片压缩库
    implementation 'com.github.ZS-ZhangsShun:EasyImageCompressor:1.1.5'

    //图片选择库 selector3.0
// PictureSelector basic (Necessary)
//    implementation 'io.github.lucksiege:pictureselector:v3.11.1'

    implementation project(':dkplayer-java')
    implementation project(':dkplayer-ui')
    implementation project(path: ':dkplayer-players:ijk')
    implementation project(path: ':dkplayer-players:exo')
    //缓存
    implementation project(':dkplayer-videocache')
    // scanningCode
//    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.7'

    implementation 'com.github.getActivity:XXPermissions:18.2'
//    implementation 'com.bm.photoview:library:1.4.1'

    //socket.io
    implementation('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }

    //7牛

//    implementation 'me.relex:circleindicator:1.3.2'
    implementation 'org.greenrobot:eventbus:3.2.0'
//    api 'com.tencent.imsdk:imsdk-plus:6.5.2816'
//    implementation 'com.gcssloop.recyclerview:pagerlayoutmanager:2.3.8'
    //  compile 'com.qcloud.cos:cos-android:5.9.+'
    //   implementation 'com.tencent:mmkv:1.0.22'
//    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
    implementation 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'
    implementation 'com.jaeger.statusbarutil:library:1.5.1'
//    implementation 'io.github.litao0621:nifty-slider:1.3.0'

    api 'com.alipay.sdk:alipaysdk-android:+@aar'

}
tasks.whenTaskAdded { task ->
    if (task.name == 'mergeDebugNativeLibs') {
        task.doFirst {
            println("------------------- find so files start -------------------")
            println("------------------- find so files start -------------------")
            println("------------------- find so files start -------------------")

            it.inputs.files.each { file ->
                printDir(new File(file.absolutePath))
            }

            println("------------------- find so files end -------------------")
            println("------------------- find so files end -------------------")
            println("------------------- find so files end -------------------")
        }
    }
}

def printDir(File file) {
    if (file != null) {
        if (file.isDirectory()) {
            file.listFiles().each {
                printDir(it)
            }
        } else if (file.absolutePath.endsWith(".so")) {
            println "find so file: $file.absolutePath"
        }
    }
}